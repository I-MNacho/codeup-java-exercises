==================== Product.java    (java class)

package model;

import java.io.Serializable;

public class Product implements Serializable {

    //variables
    private long id;
    private String name;
    private int priceInCents;

    //constructors
    public Product() {
    }

    public Product(long id, String name, int priceInCents) {
        this.id = id;
        this.name = name;
        this.priceInCents = priceInCents;
    }

    //getters and setters
    public long getId() {
        return id;
    }

    public void setId(long id) {
        this.id = id;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public int getPriceInCents() {
        return priceInCents;
    }

    public void setPriceInCents(int priceInCents) {
        this.priceInCents = priceInCents;
    }
}

==================== ProductIndexServlet.java  (java class)

package servlets;
import dao.DaoFactory;
import dao.ProductInMemoryDao;
import model.Product;
import model.Products;
import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.annotation.*;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

@WebServlet("/products")
public class ProductIndexServlet extends HttpServlet {
    @Override
    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {

        Products productsDao = DaoFactory.getProductsDao();

        List<Product> products = productsDao.findAll();

        request.setAttribute("products", products);

        //redirect code
        request.getRequestDispatcher("products.jsp").forward(request, response);


//one way to display
//        List<Product> products = productsDao.findAll();
//another way to display
//request.setAttribute("products", productsDao.findAll());
    }


}





==================== DaoFactory.java    (java class)

package dao;

import model.Products;

public class DaoFactory {

    //variable
    private static Products productsDao;

    //constructor
    public static Products getProductsDao(){
        //if there's not an instance of a doa, then it creates one
        if(productsDao == null){
            productsDao = new ProductInMemoryDao();
        }
        return productsDao;
    }


}



==================== Prodcuts.java  (interface)

package model;

import java.util.List;

public interface Products {

    //return a list of all products
    List<Product> findAll();


    //return a specific product given an id
    Product findById(long id);

    //delete a product
    void deleteById(long id);

    //add a product
    long insert(Product product);

    //edit
    void editProduct(Product product);


}



==================== ProductInMemoryDao.java  (java class)

package dao;

import model.Product;
import model.Products;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

public class ProductInMemoryDao implements Products {

    private List<Product> products;

    public ProductInMemoryDao(){
        this.products = new ArrayList<>(Arrays.asList(
                new Product(1, "hammer", 999),
                new Product(2, "screwdriver", 999),
                new Product(3, "drill", 1999)
        ));
    }

    public List<Product> findAll(){

        //SELECT * FROM products; just showing all products
        return products;
    }


    @Override
    public Product findById(long id) {
        return products.get((int) id);
    }

    @Override
    public void deleteById(long id) {
        products.remove((int) id);
    }

    @Override
    public long insert(Product product) {
        return 0;
    }

    @Override
    public void editProduct(Product product) {

    }
}


==================== products.jsp   (jsp file)

<%@ page contentType="text/html;charset=UTF-8" language="java" %>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
<html>
<head>
    <title>View All Products</title>
    <style>
        div{
         border: 1px solid black;
        }
    </style>
</head>
<body>

    <h1>Product list</h1>

    <c:forEach var="product" items="${products}">
        <div>
            <p>Product Name: ${product.name}</p>
            <p>Price in cents: ${product.priceInCents}</p>
        </div>
    </c:forEach>

</body>
</html>

